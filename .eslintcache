[{"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\index.js":"1","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\App.js":"2","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\routes.js":"3","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\main\\index.js":"4","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\repositorios\\index.js":"5","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\styled\\global.js":"6","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\main\\styled.js":"7","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\services\\api.js":"8","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\repositorios\\styled.js":"9"},{"size":199,"mtime":1609533689659,"results":"10","hashOfConfig":"11"},{"size":178,"mtime":1609535427547,"results":"12","hashOfConfig":"11"},{"size":471,"mtime":1609534856044,"results":"13","hashOfConfig":"11"},{"size":3481,"mtime":1609549551653,"results":"14","hashOfConfig":"11"},{"size":4544,"mtime":1609608110609,"results":"15","hashOfConfig":"11"},{"size":431,"mtime":1609535356970,"results":"16","hashOfConfig":"11"},{"size":2060,"mtime":1609548787822,"results":"17","hashOfConfig":"11"},{"size":123,"mtime":1609540916077,"results":"18","hashOfConfig":"11"},{"size":2817,"mtime":1609607637341,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1wo7g64",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\index.js",[],["40","41"],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\App.js",[],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\routes.js",[],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\main\\index.js",[],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\repositorios\\index.js",["42","43","44"],"import React,{useState, useEffect} from 'react'\r\n\r\nimport api from '../../services/api'\r\nimport { Container, Owner, Loading, BackButton, IssuesList, PageActions, FilterList } from './styled'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\n\r\nexport default function Repositorios({match}){\r\n    const [ repositorio, setRepositorio] = useState({});\r\n    const [ issues, setIssues ] = useState([]);\r\n    const [ loading, setLoading ] = useState(true)\r\n    const [page, setPage] = useState(1)\r\n    const [ filters, setFilters] = useState([\r\n        {state: 'all', label: 'Todas', active: true},\r\n        {state: 'open', label: 'Abertas', active: false},\r\n        {state: 'closed', label: 'Fechadas', active: false},\r\n    ])\r\n    const [filterIndex, setFilterIndex] = useState(0)\r\n    useEffect(()=>{\r\n        async function loadIssue(){\r\n            const nomeRepo = decodeURIComponent(match.params.repositorio); \r\n\r\n            const response = await api.get(`/repos/${nomeRepo}/issues`,{\r\n                params:{\r\n                    state: filters[filterIndex].state,\r\n                    page,\r\n                    per_page: 5, \r\n                },\r\n            });\r\n\r\n            setIssues(response.data)\r\n        }\r\n\r\n        loadIssue()\r\n    },[filterIndex,filters,match.params.repositorio,page])\r\n\r\n    function handlePage(action){\r\n        setPage(action === 'back' ? page -1 : page +1)\r\n    }\r\n\r\n    function handleFilter(index){\r\n        setFilterIndex(index)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        async function load(){\r\n            const nomeRepo = decodeURIComponent(match.params.repositorio); \r\n            \r\n            const [repositorioData, issuesData] = await Promise.all([\r\n                api.get(`/repos/${nomeRepo}`),\r\n                api.get(`/repos/${nomeRepo}/issues`,{\r\n                    params:{\r\n                        state: filters.find(f => f.active).state,\r\n                        per_page:5\r\n                    }\r\n                })\r\n            ])\r\n        \r\n            setRepositorio(repositorioData.data)\r\n            setIssues(issuesData.data)\r\n            setLoading(false)\r\n            \r\n        }\r\n\r\n        load();\r\n    },[match.params.repositorio])\r\n    \r\n    if(loading){\r\n        return(\r\n            <Loading>\r\n                <h1>Carregando...</h1>\r\n            </Loading>\r\n \r\n        )\r\n    }\r\n    return(\r\n        <>\r\n            <Container>\r\n                <BackButton to=\"/\">\r\n                    <FaArrowLeft size={30} color=\"#000\"/>\r\n                </BackButton>\r\n                <Owner>\r\n                <img \r\n                    src={repositorio.owner.avatar_url}\r\n                    alt={repositorio.owner.login}\r\n                    />\r\n                    <h1>{repositorio.name}</h1>\r\n                    <p>{repositorio.description}</p>\r\n\r\n                </Owner>\r\n\r\n                <FilterList active={filterIndex}>\r\n                    {filters.map((filter,index)=>{\r\n                        return(\r\n                            <button\r\n                            type=\"button\"\r\n                            key={filter.label}\r\n                            onClick={()=>handleFilter(index)}\r\n                            >\r\n                                {filter.label}\r\n\r\n                            </button>\r\n                        )\r\n                    })}\r\n                </FilterList>\r\n\r\n                <IssuesList>\r\n                    {issues.map(issue =>(\r\n                        <li key={String(issue.id)}>\r\n                            <img src={issue.user.avatar_url} alt={issue.user.login}/>\r\n\r\n                            <div>\r\n                                <strong>\r\n                                    <a hred={issue.html_url}>{issue.title}</a>\r\n                                    {issue.labels.map(label =>(\r\n                                        <span key={String(label.id)}>{label.name}</span>\r\n                                    ))\r\n\r\n                                    }\r\n                                </strong>\r\n                                <p>{issue.user.login}</p>\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                    }\r\n                </IssuesList>\r\n                <PageActions>\r\n                    <button type=\"button\" onClick={()=>handlePage('back')} disabled={page < 2}>Voltar</button>\r\n                    <button type=\"button\" onClick={()=>handlePage('next')}>Proximo</button>\r\n                </PageActions>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n    \r\n}","C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\styled\\global.js",[],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\main\\styled.js",[],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\services\\api.js",[],"C:\\Users\\Jarvas\\Desktop\\Portfolio\\Clones\\01-Projetos\\99-react\\05-Github\\novogithub\\src\\pages\\repositorios\\styled.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":12,"column":22,"nodeType":"51","messageId":"52","endLine":12,"endColumn":32},{"ruleId":"53","severity":1,"message":"54","line":65,"column":7,"nodeType":"55","endLine":65,"endColumn":33,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":113,"column":37,"nodeType":"59","endLine":113,"endColumn":62},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'setFilters' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filters'. Either include it or remove the dependency array.","ArrayExpression",["62"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [filters, match.params.repositorio]",{"range":"65","text":"66"},[2167,2193],"[filters, match.params.repositorio]"]